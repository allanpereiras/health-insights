# Generated by Django 3.1.5 on 2022-11-28 21:10

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields


class Migration(migrations.Migration):

    dependencies = [
        ('insights', '0027_update_health_score_insight'),
    ]

    operations = [
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('aggregation_type', models.CharField(blank=True, choices=[('avg', 'Avg'), ('max', 'Max'), ('min', 'Min'), ('sum', 'Sum')], max_length=16, null=True)),
                ('aggregation_period', models.DurationField(blank=True, default=datetime.timedelta(days=30), null=True)),
                ('value', models.DecimalField(blank=True, decimal_places=4, max_digits=12, null=True)),
                ('value_unit', models.CharField(blank=True, max_length=25)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterModelOptions(
            name='healthinsightrecommendation',
            options={'ordering': ['goal', 'priority']},
        ),
        migrations.AddField(
            model_name='healthinsightrecommendation',
            name='alt_notification_text',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='healthinsightrecommendation',
            name='delivery_time',
            field=models.TimeField(null=True),
        ),
        migrations.AddField(
            model_name='healthinsightrecommendation',
            name='notification_text',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='healthinsightrecommendation',
            name='priority',
            field=models.PositiveSmallIntegerField(default=1),
        ),
        migrations.AlterField(
            model_name='healthinsightrecommendation',
            name='health_insights',
            field=models.ManyToManyField(help_text="Set of HealthInsights that are used to generate this recommendation. Don't mix value types and units", related_name='in_recommendations', to='insights.HealthInsight'),
        ),
        migrations.CreateModel(
            name='RecommendationTrigger',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified', django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, null=True, verbose_name='description')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, populate_from='title', verbose_name='slug')),
                ('status', models.IntegerField(choices=[(0, 'Inactive'), (1, 'Active')], default=1, verbose_name='status')),
                ('activate_date', models.DateTimeField(blank=True, help_text='keep empty for an immediate activation', null=True)),
                ('deactivate_date', models.DateTimeField(blank=True, help_text='keep empty for indefinite activation', null=True)),
                ('recommendation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='triggers', to='insights.healthinsightrecommendation')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TriggerCalories',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('insights.recommendationtrigger',),
        ),
        migrations.CreateModel(
            name='TriggerRestingHR',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('insights.recommendationtrigger',),
        ),
        migrations.CreateModel(
            name='TriggerSleep',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('insights.recommendationtrigger',),
        ),
        migrations.CreateModel(
            name='TriggerSteps',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('insights.recommendationtrigger',),
        ),
        migrations.CreateModel(
            name='TriggerWeight',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('insights.recommendationtrigger',),
        ),
        migrations.AddField(
            model_name='healthinsightrecommendation',
            name='goal',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.PROTECT, related_name='recommendations', to='insights.goal'),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name='healthinsightrecommendation',
            unique_together={('goal', 'priority')},
        ),
    ]
